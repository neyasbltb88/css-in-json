{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/css-in-json.js","app/js/modules/extend.js"],"names":[],"mappings":"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","file":"../css-in-json.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Extend from './modules/extend';\r\n\r\nclass CSSinJSON {\r\n    constructor(options) {\r\n        this.elem_selector = options.elem;\r\n        this.elem = document.querySelector(options.elem);\r\n        this.style_obj = options.style;\r\n        this.scoped = options.scoped;\r\n\r\n        this.Extend = Extend;\r\n\r\n        this.scopedId = '';\r\n        this.style_string = '';\r\n\r\n\r\n        this.init();\r\n    }\r\n\r\n    rand(min, max) {\r\n        let rand = Math.floor(min + Math.random() * (max + 1 - min));\r\n        return rand;\r\n    }\r\n\r\n    scopedIdGenerate() {\r\n        let id = '';\r\n        for (let i = 0; i < 10; i++) {\r\n            id += String.fromCharCode(this.rand(97, 122));\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    extend(obj1, obj2) {\r\n        this.style_obj = this.Extend(obj1, obj2);\r\n        this.style_string = this.jsonToStyle(this.style_obj, this.scopedId);\r\n        this.updateStyleInject(this.style_string, this.scopedId);\r\n\r\n        return this.style_string;\r\n    }\r\n\r\n    updateStyleInject(style_content, scoped) {\r\n        let stl = document.querySelector(`#${scoped}`);\r\n        stl.textContent = style_content;\r\n    }\r\n\r\n    styleInject(style_content, elem, class_name, scoped) {\r\n        let stl = document.createElement('style');\r\n        stl.id = scoped;\r\n        stl.className = class_name;\r\n        stl.textContent = style_content;\r\n        elem.appendChild(stl);\r\n    }\r\n\r\n    objToStyle(selector, obj, scoped) {\r\n        let root_detect = (selector === this.elem_selector) ? '' : ' ';\r\n        let scoped_selector = (scoped !== '') ? `[data-scoped=${scoped}]` : '';\r\n        let style = '';\r\n        for (let prop in obj) {\r\n            style += `\\n    ${prop}: ${obj[prop]};`\r\n        }\r\n\r\n        if (root_detect == '') {\r\n            return `${selector}${scoped_selector} {${style}\\n}`\r\n        }\r\n\r\n        return `${scoped_selector}${root_detect}${selector} {${style}\\n}`\r\n    }\r\n\r\n    jsonToStyle(json, scoped = '') {\r\n        let style = '';\r\n        for (let selector in json) {\r\n            style += this.objToStyle(selector, json[selector], scoped) + '\\n\\n';\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n\r\n    init() {\r\n        if (this.scoped) {\r\n            this.scopedId = this.scopedIdGenerate();\r\n            this.elem.dataset.scoped = this.scopedId;\r\n        }\r\n\r\n        this.style_string = this.jsonToStyle(this.style_obj, this.scopedId);\r\n\r\n        this.styleInject(this.style_string, document.body, 'CSSinJSON_style', this.scopedId);\r\n    }\r\n}\r\n\r\n// TODO: При генерации scoped стилей сделать определение нескольких селекторов,\r\n// записанных через запятую, и вставлять перед каждый атрибут scoped\r\n\r\n//////////////////////////////////////////////\r\n\r\nwindow.style = {\r\n    'body': {\r\n        'margin': 0,\r\n        'background-color': '#333',\r\n    },\r\n\r\n    '.container': {\r\n        'margin': '0 auto',\r\n        'background-color': '#dedede',\r\n        'max-width': '800px',\r\n        'padding': '15px',\r\n    },\r\n\r\n    'h2, h3': {\r\n        'text-align': 'center'\r\n    },\r\n\r\n    '.section': {\r\n        'border': '1px solid #000',\r\n        'margin-bottom': '15px',\r\n        'padding': '15px',\r\n        'border-radius': '5px',\r\n    },\r\n\r\n    '.section:last-child': {\r\n        'margin-bottom': '0',\r\n    }\r\n}\r\n\r\nwindow.style2 = {\r\n    'ul': {\r\n        'list-style-type': 'none'\r\n    },\r\n    '.section': {\r\n        'border-radius': '15px',\r\n    },\r\n}\r\n\r\nwindow.CssInJson = new CSSinJSON({\r\n    elem: 'body',\r\n    // elem: '.container',\r\n    style: style,\r\n    scoped: true\r\n});\r\n\r\n\r\n\r\n//////////////////////////////////////\r\nlet style_info = document.querySelector('.style_info');\r\nlet CSSinJSON_style = document.querySelector('.CSSinJSON_style');\r\nlet style_show = document.querySelector('.style_show');\r\nlet json_show = document.querySelector('.json_show');\r\nlet base_selector = document.querySelector('.base_selector')\r\n\r\nstyle_info.textContent = `В body вставлен тег <style id=\"${CSSinJSON_style.id}\" class=\"${CSSinJSON_style.className}\"></style>`;\r\nstyle_show.textContent = CSSinJSON_style.textContent;\r\n\r\njson_show.textContent = JSON.stringify(window.style, ' ', 4);\r\n\r\nbase_selector.textContent = CssInJson.elem_selector;","/*Функция из jQuery для объединения объектов\r\n * var newObj = extend(obj_1, obj_2);\r\n *\r\n * Для рекурсивного объединения\r\n * var newObj = extend(true, obj_1, obj_2);\r\n *\r\n * Работа функции изменяет первый объект obj_1\r\n * newObj === obj_1\r\n */\r\n\r\n\r\nexport default function extend() {\r\n    var options, name, src, copy, copyIsArray, clone,\r\n        target = arguments[0] || {},\r\n        i = 1,\r\n        length = arguments.length,\r\n        deep = false;\r\n    // Handle a deep copy situation\r\n    if (typeof target === \"boolean\") {\r\n        deep = target;\r\n        // Skip the boolean and the target\r\n        target = arguments[i] || {};\r\n        i++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (typeof target !== \"object\" && !isFunction(target)) {\r\n        target = {};\r\n    }\r\n    // Extend jQuery itself if only one argument is passed\r\n    if (i === length) {\r\n        target = this;\r\n        i--;\r\n    }\r\n    for (; i < length; i++) {\r\n        // Only deal with non-null/undefined values\r\n        if ((options = arguments[i]) != null) {\r\n            // Extend the base object\r\n            for (name in options) {\r\n                src = target[name];\r\n                copy = options[name];\r\n                // Prevent never-ending loop\r\n                if (target === copy) {\r\n                    continue;\r\n                }\r\n                // Recurse if we're merging plain objects or arrays\r\n                if (deep && copy && (isPlainObject(copy) ||\r\n                        (copyIsArray = Array.isArray(copy)))) {\r\n                    if (copyIsArray) {\r\n                        copyIsArray = false;\r\n                        clone = src && Array.isArray(src) ? src : [];\r\n                    } else {\r\n                        clone = src && isPlainObject(src) ? src : {};\r\n                    }\r\n                    // Never move original objects, clone them\r\n                    target[name] = extend(deep, clone, copy);\r\n                    // Don't bring in undefined values\r\n                } else if (copy !== undefined) {\r\n                    target[name] = copy;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        var proto, Ctor;\r\n        // Detect obvious negatives\r\n        // Use toString instead of jQuery.type to catch host objects\r\n        if (!obj || toString.call(obj) !== \"[object Object]\") {\r\n            return false;\r\n        }\r\n        proto = getProto(obj);\r\n        // Objects with no prototype (e.g., `Object.create( null )`) are plain\r\n        if (!proto) {\r\n            return true;\r\n        }\r\n        // Objects with prototype are plain iff they were constructed by a global Object function\r\n        Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\r\n        return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\r\n\r\n        function getProto(obj) {\r\n            obj = obj || {};\r\n            return obj.getPrototypeOf;\r\n        }\r\n\r\n        function class2type() {\r\n            return {};\r\n        }\r\n\r\n        function hasOwn(class2type) {\r\n            return class2type.hasOwnProperty;\r\n        }\r\n\r\n        function fnToString(hasOwn) {\r\n            return hasOwn.toString;\r\n        }\r\n    }\r\n\r\n    // Return the modified object\r\n    return target;\r\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHAvanMvY3NzLWluLWpzb24uanMiLCJhcHAvanMvbW9kdWxlcy9leHRlbmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBOzs7Ozs7Ozs7O0lBRU0sUzs7O0FBQ0YscUJBQVksT0FBWixFQUFxQjtBQUFBOztBQUNqQixTQUFLLGFBQUwsR0FBcUIsT0FBTyxDQUFDLElBQTdCO0FBQ0EsU0FBSyxJQUFMLEdBQVksUUFBUSxDQUFDLGFBQVQsQ0FBdUIsT0FBTyxDQUFDLElBQS9CLENBQVo7QUFDQSxTQUFLLFNBQUwsR0FBaUIsT0FBTyxDQUFDLEtBQXpCO0FBQ0EsU0FBSyxNQUFMLEdBQWMsT0FBTyxDQUFDLE1BQXRCO0FBRUEsU0FBSyxNQUFMLEdBQWMsZUFBZDtBQUVBLFNBQUssUUFBTCxHQUFnQixFQUFoQjtBQUNBLFNBQUssWUFBTCxHQUFvQixFQUFwQjtBQUdBLFNBQUssSUFBTDtBQUNIOzs7O3lCQUVJLEcsRUFBSyxHLEVBQUs7QUFDWCxVQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBTCxDQUFXLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTCxNQUFpQixHQUFHLEdBQUcsQ0FBTixHQUFVLEdBQTNCLENBQWpCLENBQVg7QUFDQSxhQUFPLElBQVA7QUFDSDs7O3VDQUVrQjtBQUNmLFVBQUksRUFBRSxHQUFHLEVBQVQ7O0FBQ0EsV0FBSyxJQUFJLENBQUMsR0FBRyxDQUFiLEVBQWdCLENBQUMsR0FBRyxFQUFwQixFQUF3QixDQUFDLEVBQXpCLEVBQTZCO0FBQ3pCLFFBQUEsRUFBRSxJQUFJLE1BQU0sQ0FBQyxZQUFQLENBQW9CLEtBQUssSUFBTCxDQUFVLEVBQVYsRUFBYyxHQUFkLENBQXBCLENBQU47QUFDSDs7QUFFRCxhQUFPLEVBQVA7QUFDSDs7OzJCQUVNLEksRUFBTSxJLEVBQU07QUFDZixXQUFLLFNBQUwsR0FBaUIsS0FBSyxNQUFMLENBQVksSUFB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QUFrQixHQUFsQixFQUF1QjtBQUNuQixNQUFBLEdBQUcsR0FBRyxHQUFHLElBQUksRUFBYjtBQUNBLGFBQU8sR0FBRyxDQUFDLGNBQVg7QUFDSDs7QUFFRCxhQUFTLFVBQVQsR0FBc0I7QUFDbEIsYUFBTyxFQUFQO0FBQ0g7O0FBRUQsYUFBUyxNQUFULENBQWdCLFVBQWhCLEVBQTRCO0FBQ3hCLGFBQU8sVUFBVSxDQUFDLGNBQWxCO0FBQ0g7O0FBRUQsYUFBUyxVQUFULENBQW9CLE1BQXBCLEVBQTRCO0FBQ3hCLGFBQU8sTUFBTSxDQUFDLFFBQWQ7QUFDSDtBQUNKLEdBcEY0QixDQXNGN0I7OztBQUNBLFNBQU8sTUFBUDtBQUNIOztBQUFBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiaW1wb3J0IEV4dGVuZCBmcm9tICcuL21vZHVsZXMvZXh0ZW5kJztcclxuXHJcbmNsYXNzIENTU2luSlNPTiB7XHJcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtX3NlbGVjdG9yID0gb3B0aW9ucy5lbGVtO1xyXG4gICAgICAgIHRoaXMuZWxlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Iob3B0aW9ucy5lbGVtKTtcclxuICAgICAgICB0aGlzLnN0eWxlX29iaiA9IG9wdGlvbnMuc3R5bGU7XHJcbiAgICAgICAgdGhpcy5zY29wZWQgPSBvcHRpb25zLnNjb3BlZDtcclxuXHJcbiAgICAgICAgdGhpcy5FeHRlbmQgPSBFeHRlbmQ7XHJcblxyXG4gICAgICAgIHRoaXMuc2NvcGVkSWQgPSAnJztcclxuICAgICAgICB0aGlzLnN0eWxlX3N0cmluZyA9ICcnO1xyXG5cclxuXHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmFuZChtaW4sIG1heCkge1xyXG4gICAgICAgIGxldCByYW5kID0gTWF0aC5mbG9vcihtaW4gKyBNYXRoLnJhbmRvbSgpICogKG1heCArIDEgLSBtaW4pKTtcclxuICAgICAgICByZXR1cm4gcmFuZDtcclxuICAgIH1cclxuXHJcbiAgICBzY29wZWRJZEdlbmVyYXRlKCkge1xyXG4gICAgICAgIGxldCBpZCA9ICcnO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gICAgICAgICAgICBpZCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKHRoaXMucmFuZCg5NywgMTIyKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gaWQ7XHJcbiAgICB9XHJcblxyXG4gICAgZXh0ZW5kKG9iajEsIG9iajIpIHtcclxuICAgICAgICB0aGlzLnN0eWxlX29iaiA9IHRoaXMuRXh0ZW5kKG9iajEsIG9iajIpO1xyXG4gICAgICAgIHRoaXMuc3R5bGVfc3RyaW5nID0gdGhpcy5qc29uVG9TdHlsZSh0aGlzLnN0eWxlX29iaiwgdGhpcy5zY29wZWRJZCk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVTdHlsZUluamVjdCh0aGlzLnN0eWxlX3N0cmluZywgdGhpcy5zY29wZWRJZCk7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLnN0eWxlX3N0cmluZztcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVTdHlsZUluamVjdChzdHlsZV9jb250ZW50LCBzY29wZWQpIHtcclxuICAgICAgICBsZXQgc3RsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7c2NvcGVkfWApO1xyXG4gICAgICAgIHN0bC50ZXh0Q29udGVudCA9IHN0eWxlX2NvbnRlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgc3R5bGVJbmplY3Qoc3R5bGVfY29udGVudCwgZWxlbSwgY2xhc3NfbmFtZSwgc2NvcGVkKSB7XHJcbiAgICAgICAgbGV0IHN0bCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XHJcbiAgICAgICAgc3RsLmlkID0gc2NvcGVkO1xyXG4gICAgICAgIHN0bC5jbGFzc05hbWUgPSBjbGFzc19uYW1lO1xyXG4gICAgICAgIHN0bC50ZXh0Q29udGVudCA9IHN0eWxlX2NvbnRlbnQ7XHJcbiAgICAgICAgZWxlbS5hcHBlbmRDaGlsZChzdGwpO1xyXG4gICAgfVxyXG5cclxuICAgIG9ialRvU3R5bGUoc2VsZWN0b3IsIG9iaiwgc2NvcGVkKSB7XHJcbiAgICAgICAgbGV0IHJvb3RfZGV0ZWN0ID0gKHNlbGVjdG9yID09PSB0aGlzLmVsZW1fc2VsZWN0b3IpID8gJycgOiAnICc7XHJcbiAgICAgICAgbGV0IHNjb3BlZF9zZWxlY3RvciA9IChzY29wZWQgIT09ICcnKSA/IGBbZGF0YS1zY29wZWQ9JHtzY29wZWR9XWAgOiAnJztcclxuICAgICAgICBsZXQgc3R5bGUgPSAnJztcclxuICAgICAgICBmb3IgKGxldCBwcm9wIGluIG9iaikge1xyXG4gICAgICAgICAgICBzdHlsZSArPSBgXFxuICAgICR7cHJvcH06ICR7b2JqW3Byb3BdfTtgXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAocm9vdF9kZXRlY3QgPT0gJycpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGAke3NlbGVjdG9yfSR7c2NvcGVkX3NlbGVjdG9yfSB7JHtzdHlsZX1cXG59YFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGAke3Njb3BlZF9zZWxlY3Rvcn0ke3Jvb3RfZGV0ZWN0fSR7c2VsZWN0b3J9IHske3N0eWxlfVxcbn1gXHJcbiAgICB9XHJcblxyXG4gICAganNvblRvU3R5bGUoanNvbiwgc2NvcGVkID0gJycpIHtcclxuICAgICAgICBsZXQgc3R5bGUgPSAnJztcclxuICAgICAgICBmb3IgKGxldCBzZWxlY3RvciBpbiBqc29uKSB7XHJcbiAgICAgICAgICAgIHN0eWxlICs9IHRoaXMub2JqVG9TdHlsZShzZWxlY3RvciwganNvbltzZWxlY3Rvcl0sIHNjb3BlZCkgKyAnXFxuXFxuJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBzdHlsZTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICBpZiAodGhpcy5zY29wZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5zY29wZWRJZCA9IHRoaXMuc2NvcGVkSWRHZW5lcmF0ZSgpO1xyXG4gICAgICAgICAgICB0aGlzLmVsZW0uZGF0YXNldC5zY29wZWQgPSB0aGlzLnNjb3BlZElkO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5zdHlsZV9zdHJpbmcgPSB0aGlzLmpzb25Ub1N0eWxlKHRoaXMuc3R5bGVfb2JqLCB0aGlzLnNjb3BlZElkKTtcclxuXHJcbiAgICAgICAgdGhpcy5zdHlsZUluamVjdCh0aGlzLnN0eWxlX3N0cmluZywgZG9jdW1lbnQuYm9keSwgJ0NTU2luSlNPTl9zdHlsZScsIHRoaXMuc2NvcGVkSWQpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBUT0RPOiDQn9GA0Lgg0LPQtdC90LXRgNCw0YbQuNC4IHNjb3BlZCDRgdGC0LjQu9C10Lkg0YHQtNC10LvQsNGC0Ywg0L7Qv9GA0LXQtNC10LvQtdC90LjQtSDQvdC10YHQutC+0LvRjNC60LjRhSDRgdC10LvQtdC60YLQvtGA0L7QsixcclxuLy8g0LfQsNC/0LjRgdCw0L3QvdGL0YUg0YfQtdGA0LXQtyDQt9Cw0L/Rj9GC0YPRjiwg0Lgg0LLRgdGC0LDQstC70Y/RgtGMINC/0LXRgNC10LQg0LrQsNC20LTRi9C5INCw0YLRgNC40LHRg9GCIHNjb3BlZFxyXG5cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5cclxud2luZG93LnN0eWxlID0ge1xyXG4gICAgJ2JvZHknOiB7XHJcbiAgICAgICAgJ21hcmdpbic6IDAsXHJcbiAgICAgICAgJ2JhY2tncm91bmQtY29sb3InOiAnIzMzMycsXHJcbiAgICB9LFxyXG5cclxuICAgICcuY29udGFpbmVyJzoge1xyXG4gICAgICAgICdtYXJnaW4nOiAnMCBhdXRvJyxcclxuICAgICAgICAnYmFja2dyb3VuZC1jb2xvcic6ICcjZGVkZWRlJyxcclxuICAgICAgICAnbWF4LXdpZHRoJzogJzgwMHB4JyxcclxuICAgICAgICAncGFkZGluZyc6ICcxNXB4JyxcclxuICAgIH0sXHJcblxyXG4gICAgJ2gyLCBoMyc6IHtcclxuICAgICAgICAndGV4dC1hbGlnbic6ICdjZW50ZXInXHJcbiAgICB9LFxyXG5cclxuICAgICcuc2VjdGlvbic6IHtcclxuICAgICAgICAnYm9yZGVyJzogJzFweCBzb2xpZCAjMDAwJyxcclxuICAgICAgICAnbWFyZ2luLWJvdHRvbSc6ICcxNXB4JyxcclxuICAgICAgICAncGFkZGluZyc6ICcxNXB4JyxcclxuICAgICAgICAnYm9yZGVyLXJhZGl1cyc6ICc1cHgnLFxyXG4gICAgfSxcclxuXHJcbiAgICAnLnNlY3Rpb246bGFzdC1jaGlsZCc6IHtcclxuICAgICAgICAnbWFyZ2luLWJvdHRvbSc6ICcwJyxcclxuICAgIH1cclxufVxyXG5cclxud2luZG93LnN0eWxlMiA9IHtcclxuICAgICd1bCc6IHtcclxuICAgICAgICAnbGlzdC1zdHlsZS10eXBlJzogJ25vbmUnXHJcbiAgICB9LFxyXG4gICAgJy5zZWN0aW9uJzoge1xyXG4gICAgICAgICdib3JkZXItcmFkaXVzJzogJzE1cHgnLFxyXG4gICAgfSxcclxufVxyXG5cclxud2luZG93LkNzc0luSnNvbiA9IG5ldyBDU1NpbkpTT04oe1xyXG4gICAgZWxlbTogJ2JvZHknLFxyXG4gICAgLy8gZWxlbTogJy5jb250YWluZXInLFxyXG4gICAgc3R5bGU6IHN0eWxlLFxyXG4gICAgc2NvcGVkOiB0cnVlXHJcbn0pO1xyXG5cclxuXHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5sZXQgc3R5bGVfaW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zdHlsZV9pbmZvJyk7XHJcbmxldCBDU1NpbkpTT05fc3R5bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuQ1NTaW5KU09OX3N0eWxlJyk7XHJcbmxldCBzdHlsZV9zaG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN0eWxlX3Nob3cnKTtcclxubGV0IGpzb25fc2hvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5qc29uX3Nob3cnKTtcclxubGV0IGJhc2Vfc2VsZWN0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmFzZV9zZWxlY3RvcicpXHJcblxyXG5zdHlsZV9pbmZvLnRleHRDb250ZW50ID0gYNCSIGJvZHkg0LLRgdGC0LDQstC70LXQvSDRgtC10LMgPHN0eWxlIGlkPVwiJHtDU1NpbkpTT05fc3R5bGUuaWR9XCIgY2xhc3M9XCIke0NTU2luSlNPTl9zdHlsZS5jbGFzc05hbWV9XCI+PC9zdHlsZT5gO1xyXG5zdHlsZV9zaG93LnRleHRDb250ZW50ID0gQ1NTaW5KU09OX3N0eWxlLnRleHRDb250ZW50O1xyXG5cclxuanNvbl9zaG93LnRleHRDb250ZW50ID0gSlNPTi5zdHJpbmdpZnkod2luZG93LnN0eWxlLCAnICcsIDQpO1xyXG5cclxuYmFzZV9zZWxlY3Rvci50ZXh0Q29udGVudCA9IENzc0luSnNvbi5lbGVtX3NlbGVjdG9yOyIsIi8q0KTRg9C90LrRhtC40Y8g0LjQtyBqUXVlcnkg0LTQu9GPINC+0LHRitC10LTQuNC90LXQvdC40Y8g0L7QsdGK0LXQutGC0L7QslxyXG4gKiB2YXIgbmV3T2JqID0gZXh0ZW5kKG9ial8xLCBvYmpfMik7XHJcbiAqXHJcbiAqINCU0LvRjyDRgNC10LrRg9GA0YHQuNCy0L3QvtCz0L4g0L7QsdGK0LXQtNC40L3QtdC90LjRj1xyXG4gKiB2YXIgbmV3T2JqID0gZXh0ZW5kKHRydWUsIG9ial8xLCBvYmpfMik7XHJcbiAqXHJcbiAqINCg0LDQsdC+0YLQsCDRhNGD0L3QutGG0LjQuCDQuNC30LzQtdC90Y/QtdGCINC/0LXRgNCy0YvQuSDQvtCx0YrQtdC60YIgb2JqXzFcclxuICogbmV3T2JqID09PSBvYmpfMVxyXG4gKi9cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBleHRlbmQoKSB7XHJcbiAgICB2YXIgb3B0aW9ucywgbmFtZSwgc3JjLCBjb3B5LCBjb3B5SXNBcnJheSwgY2xvbmUsXHJcbiAgICAgICAgdGFyZ2V0ID0gYXJndW1lbnRzWzBdIHx8IHt9LFxyXG4gICAgICAgIGkgPSAxLFxyXG4gICAgICAgIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsXHJcbiAgICAgICAgZGVlcCA9IGZhbHNlO1xyXG4gICAgLy8gSGFuZGxlIGEgZGVlcCBjb3B5IHNpdHVhdGlvblxyXG4gICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09IFwiYm9vbGVhblwiKSB7XHJcbiAgICAgICAgZGVlcCA9IHRhcmdldDtcclxuICAgICAgICAvLyBTa2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XHJcbiAgICAgICAgdGFyZ2V0ID0gYXJndW1lbnRzW2ldIHx8IHt9O1xyXG4gICAgICAgIGkrKztcclxuICAgIH1cclxuICAgIC8vIEhhbmRsZSBjYXNlIHdoZW4gdGFyZ2V0IGlzIGEgc3RyaW5nIG9yIHNvbWV0aGluZyAocG9zc2libGUgaW4gZGVlcCBjb3B5KVxyXG4gICAgaWYgKHR5cGVvZiB0YXJnZXQgIT09IFwib2JqZWN0XCIgJiYgIWlzRnVuY3Rpb24odGFyZ2V0KSkge1xyXG4gICAgICAgIHRhcmdldCA9IHt9O1xyXG4gICAgfVxyXG4gICAgLy8gRXh0ZW5kIGpRdWVyeSBpdHNlbGYgaWYgb25seSBvbmUgYXJndW1lbnQgaXMgcGFzc2VkXHJcbiAgICBpZiAoaSA9PT0gbGVuZ3RoKSB7XHJcbiAgICAgICAgdGFyZ2V0ID0gdGhpcztcclxuICAgICAgICBpLS07XHJcbiAgICB9XHJcbiAgICBmb3IgKDsgaSA8IGxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgLy8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlc1xyXG4gICAgICAgIGlmICgob3B0aW9ucyA9IGFyZ3VtZW50c1tpXSkgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XHJcbiAgICAgICAgICAgIGZvciAobmFtZSBpbiBvcHRpb25zKSB7XHJcbiAgICAgICAgICAgICAgICBzcmMgPSB0YXJnZXRbbmFtZV07XHJcbiAgICAgICAgICAgICAgICBjb3B5ID0gb3B0aW9uc1tuYW1lXTtcclxuICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgbmV2ZXItZW5kaW5nIGxvb3BcclxuICAgICAgICAgICAgICAgIGlmICh0YXJnZXQgPT09IGNvcHkpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIFJlY3Vyc2UgaWYgd2UncmUgbWVyZ2luZyBwbGFpbiBvYmplY3RzIG9yIGFycmF5c1xyXG4gICAgICAgICAgICAgICAgaWYgKGRlZXAgJiYgY29weSAmJiAoaXNQbGFpbk9iamVjdChjb3B5KSB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAoY29weUlzQXJyYXkgPSBBcnJheS5pc0FycmF5KGNvcHkpKSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29weUlzQXJyYXkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29weUlzQXJyYXkgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xvbmUgPSBzcmMgJiYgQXJyYXkuaXNBcnJheShzcmMpID8gc3JjIDogW107XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2xvbmUgPSBzcmMgJiYgaXNQbGFpbk9iamVjdChzcmMpID8gc3JjIDoge307XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxyXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldFtuYW1lXSA9IGV4dGVuZChkZWVwLCBjbG9uZSwgY29weSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChjb3B5ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRbbmFtZV0gPSBjb3B5O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XHJcbiAgICAgICAgdmFyIHByb3RvLCBDdG9yO1xyXG4gICAgICAgIC8vIERldGVjdCBvYnZpb3VzIG5lZ2F0aXZlc1xyXG4gICAgICAgIC8vIFVzZSB0b1N0cmluZyBpbnN0ZWFkIG9mIGpRdWVyeS50eXBlIHRvIGNhdGNoIGhvc3Qgb2JqZWN0c1xyXG4gICAgICAgIGlmICghb2JqIHx8IHRvU3RyaW5nLmNhbGwob2JqKSAhPT0gXCJbb2JqZWN0IE9iamVjdF1cIikge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHByb3RvID0gZ2V0UHJvdG8ob2JqKTtcclxuICAgICAgICAvLyBPYmplY3RzIHdpdGggbm8gcHJvdG90eXBlIChlLmcuLCBgT2JqZWN0LmNyZWF0ZSggbnVsbCApYCkgYXJlIHBsYWluXHJcbiAgICAgICAgaWYgKCFwcm90bykge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gT2JqZWN0cyB3aXRoIHByb3RvdHlwZSBhcmUgcGxhaW4gaWZmIHRoZXkgd2VyZSBjb25zdHJ1Y3RlZCBieSBhIGdsb2JhbCBPYmplY3QgZnVuY3Rpb25cclxuICAgICAgICBDdG9yID0gaGFzT3duLmNhbGwocHJvdG8sIFwiY29uc3RydWN0b3JcIikgJiYgcHJvdG8uY29uc3RydWN0b3I7XHJcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBDdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgZm5Ub1N0cmluZy5jYWxsKEN0b3IpID09PSBPYmplY3RGdW5jdGlvblN0cmluZztcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZ2V0UHJvdG8ob2JqKSB7XHJcbiAgICAgICAgICAgIG9iaiA9IG9iaiB8fCB7fTtcclxuICAgICAgICAgICAgcmV0dXJuIG9iai5nZXRQcm90b3R5cGVPZjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGNsYXNzMnR5cGUoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7fTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGhhc093bihjbGFzczJ0eXBlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjbGFzczJ0eXBlLmhhc093blByb3BlcnR5O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZm5Ub1N0cmluZyhoYXNPd24pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGhhc093bi50b1N0cmluZztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmplY3RcclxuICAgIHJldHVybiB0YXJnZXQ7XHJcbn07Il19"}