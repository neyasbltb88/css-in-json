{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/css-in-json.js","app/js/modules/extend.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_extend","CSSinJSON","options","_classCallCheck","this","elem_selector","elem","document","querySelector","style_obj","style","scoped","Extend","default","scopedId","style_string","init","min","max","rand","Math","floor","random","id","String","fromCharCode","obj1","obj2","jsonToStyle","updateStyleInject","style_content","concat","textContent","class_name","stl","createElement","className","appendChild","selector","obj","scoped_selector","prop","json","arguments","undefined","objToStyle","scopedIdGenerate","dataset","styleInject","head","window","extend","name","src","copy","copyIsArray","clone","target","deep","_typeof","isFunction","isPlainObject","Array","isArray","proto","Ctor","toString","getProto","hasOwn","constructor","fnToString","ObjectFunctionString","getPrototypeOf","class2type","hasOwnProperty"],"mappings":"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","file":"../css-in-json.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Extend from './modules/extend';\r\n\r\n// TODO: При генерации scoped стилей сделать определение нескольких селекторов,\r\n// записанных через запятую, и вставлять перед каждый атрибут scoped\r\n\r\nclass CSSinJSON {\r\n    constructor(options) {\r\n        this.elem_selector = options.elem; // Селектор элемента\r\n        this.elem = document.querySelector(options.elem); // Сам элемент\r\n        this.style_obj = options.style; // Объект стилей\r\n        this.scoped = options.scoped; // Флаг изоляции стилей\r\n\r\n        this.Extend = Extend; // Плагин объединения объектов\r\n\r\n        this.scopedId = ''; // Здесь будет сгенерированный id для изоляции стилей\r\n        this.style_string = ''; // Здесь будут сгенерированные стили в виде строки\r\n\r\n\r\n        // Точка входа\r\n        this.init();\r\n    }\r\n\r\n    // Генератор рандомного числа\r\n    rand(min, max) {\r\n        let rand = Math.floor(min + Math.random() * (max + 1 - min));\r\n        return rand;\r\n    }\r\n\r\n    // Генератор id для изоляции в диапазоне символов a-z\r\n    scopedIdGenerate() {\r\n        let id = '';\r\n        for (let i = 0; i < 10; i++) {\r\n            id += String.fromCharCode(this.rand(97, 122));\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    // TODO: разобраться с этим методом\r\n    // Метод расширения стилей, пока работает не правильно\r\n    extend(obj1, obj2) {\r\n        this.style_obj = this.Extend(obj1, obj2);\r\n        this.style_string = this.jsonToStyle(this.style_obj, this.scopedId);\r\n        this.updateStyleInject(this.style_string, this.scopedId);\r\n\r\n        return this.style_string;\r\n    }\r\n\r\n    // Вставка новых стилей в готовый элемент style\r\n    updateStyleInject(style_content, scoped) {\r\n        let stl = document.querySelector(`#${scoped}`);\r\n        stl.textContent = style_content;\r\n    }\r\n\r\n    // Создание нового элемента style и заполнение его атрибутами и стилями\r\n    styleInject(style_content, elem, class_name, scoped) {\r\n        let stl = document.createElement('style');\r\n        stl.id = scoped;\r\n        stl.className = class_name;\r\n        stl.textContent = style_content;\r\n        elem.appendChild(stl);\r\n    }\r\n\r\n    // Генерирует строковые стили для одного селектора\r\n    objToStyle(selector, obj, scoped) {\r\n        let scoped_selector = (scoped !== '') ? `[data-scoped=${scoped}]` : '';\r\n        let style = '';\r\n        for (let prop in obj) {\r\n            style += `\\n    ${prop}: ${obj[prop]};`\r\n        }\r\n\r\n        if (selector === this.elem_selector) {\r\n            return `${selector}${scoped_selector} {${style}\\n}`\r\n        }\r\n\r\n        return `${scoped_selector} ${selector} {${style}\\n}`\r\n    }\r\n\r\n    // Генерирует полные стили по входящему объекту\r\n    jsonToStyle(json, scoped = '') {\r\n        let style = '';\r\n        for (let selector in json) {\r\n            style += this.objToStyle(selector, json[selector], scoped) + '\\n\\n';\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n\r\n    init() {\r\n        // Если нужно, сгенерировать id для изоляции стилей\r\n        if (this.scoped) {\r\n            this.scopedId = this.scopedIdGenerate();\r\n            this.elem.dataset.scoped = this.scopedId;\r\n        }\r\n\r\n        // Сгенерировать строку стилей из полученного объекта\r\n        this.style_string = this.jsonToStyle(this.style_obj, this.scopedId);\r\n\r\n        // Вставить сгенерированные стили на страницу\r\n        this.styleInject(this.style_string, document.head, 'CSSinJSON_style', this.scopedId);\r\n    }\r\n}\r\n\r\nwindow.CSSinJSON = CSSinJSON;","/*Функция из jQuery для объединения объектов\r\n * var newObj = extend(obj_1, obj_2);\r\n *\r\n * Для рекурсивного объединения\r\n * var newObj = extend(true, obj_1, obj_2);\r\n *\r\n * Работа функции изменяет первый объект obj_1\r\n * newObj === obj_1\r\n */\r\n\r\n\r\nexport default function extend() {\r\n    var options, name, src, copy, copyIsArray, clone,\r\n        target = arguments[0] || {},\r\n        i = 1,\r\n        length = arguments.length,\r\n        deep = false;\r\n    // Handle a deep copy situation\r\n    if (typeof target === \"boolean\") {\r\n        deep = target;\r\n        // Skip the boolean and the target\r\n        target = arguments[i] || {};\r\n        i++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (typeof target !== \"object\" && !isFunction(target)) {\r\n        target = {};\r\n    }\r\n    // Extend jQuery itself if only one argument is passed\r\n    if (i === length) {\r\n        target = this;\r\n        i--;\r\n    }\r\n    for (; i < length; i++) {\r\n        // Only deal with non-null/undefined values\r\n        if ((options = arguments[i]) != null) {\r\n            // Extend the base object\r\n            for (name in options) {\r\n                src = target[name];\r\n                copy = options[name];\r\n                // Prevent never-ending loop\r\n                if (target === copy) {\r\n                    continue;\r\n                }\r\n                // Recurse if we're merging plain objects or arrays\r\n                if (deep && copy && (isPlainObject(copy) ||\r\n                        (copyIsArray = Array.isArray(copy)))) {\r\n                    if (copyIsArray) {\r\n                        copyIsArray = false;\r\n                        clone = src && Array.isArray(src) ? src : [];\r\n                    } else {\r\n                        clone = src && isPlainObject(src) ? src : {};\r\n                    }\r\n                    // Never move original objects, clone them\r\n                    target[name] = extend(deep, clone, copy);\r\n                    // Don't bring in undefined values\r\n                } else if (copy !== undefined) {\r\n                    target[name] = copy;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        var proto, Ctor;\r\n        // Detect obvious negatives\r\n        // Use toString instead of jQuery.type to catch host objects\r\n        if (!obj || toString.call(obj) !== \"[object Object]\") {\r\n            return false;\r\n        }\r\n        proto = getProto(obj);\r\n        // Objects with no prototype (e.g., `Object.create( null )`) are plain\r\n        if (!proto) {\r\n            return true;\r\n        }\r\n        // Objects with prototype are plain iff they were constructed by a global Object function\r\n        Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\r\n        return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\r\n\r\n        function getProto(obj) {\r\n            obj = obj || {};\r\n            return obj.getPrototypeOf;\r\n        }\r\n\r\n        function class2type() {\r\n            return {};\r\n        }\r\n\r\n        function hasOwn(class2type) {\r\n            return class2type.hasOwnProperty;\r\n        }\r\n\r\n        function fnToString(hasOwn) {\r\n            return hasOwn.toString;\r\n        }\r\n    }\r\n\r\n    // Return the modified object\r\n    return target;\r\n};"]}