{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/js/css-in-json.js","app/js/modules/extend.js"],"names":[],"mappings":"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","file":"../css-in-json.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Extend from './modules/extend';\r\n\r\n// TODO: При генерации scoped стилей сделать определение нескольких селекторов,\r\n// записанных через запятую, и вставлять перед каждый атрибут scoped\r\n\r\nclass CSSinJSON {\r\n    constructor(options) {\r\n        this.elem_selector = options.elem; // Селектор элемента\r\n        this.elem = document.querySelector(options.elem); // Сам элемент\r\n        this.style_obj = options.style; // Объект стилей\r\n        this.scoped = options.scoped; // Флаг изоляции стилей\r\n\r\n        this.Extend = Extend; // Плагин объединения объектов\r\n\r\n        this.scopedId = ''; // Здесь будет сгенерированный id для изоляции стилей\r\n        this.style_string = ''; // Здесь будут сгенерированные стили в виде строки\r\n\r\n\r\n        // Точка входа\r\n        this.init();\r\n    }\r\n\r\n    // Генератор рандомного числа\r\n    rand(min, max) {\r\n        let rand = Math.floor(min + Math.random() * (max + 1 - min));\r\n        return rand;\r\n    }\r\n\r\n    // Генератор id для изоляции в диапазоне символов a-z\r\n    scopedIdGenerate() {\r\n        let id = '';\r\n        for (let i = 0; i < 10; i++) {\r\n            id += String.fromCharCode(this.rand(97, 122));\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    // TODO: разобраться с этим методом\r\n    // Метод расширения стилей, пока работает не правильно\r\n    extend(obj1, obj2) {\r\n        this.style_obj = this.Extend(obj1, obj2);\r\n        this.style_string = this.jsonToStyle(this.style_obj, this.scopedId);\r\n        this.updateStyleInject(this.style_string, this.scopedId);\r\n\r\n        return this.style_string;\r\n    }\r\n\r\n    // Вставка новых стилей в готовый элемент style\r\n    updateStyleInject(style_content, scoped) {\r\n        let stl = document.querySelector(`#${scoped}`);\r\n        stl.textContent = style_content;\r\n    }\r\n\r\n    // Создание нового элемента style и заполнение его атрибутами и стилями\r\n    styleInject(style_content, elem, class_name, scoped) {\r\n        let stl = document.createElement('style');\r\n        stl.id = scoped;\r\n        stl.className = class_name;\r\n        stl.textContent = style_content;\r\n        elem.appendChild(stl);\r\n    }\r\n\r\n    // Генерирует строковые стили для одного селектора\r\n    objToStyle(selector, obj, scoped) {\r\n        let scoped_selector = (scoped !== '') ? `[data-scoped=${scoped}]` : '';\r\n        let style = '';\r\n        for (let prop in obj) {\r\n            style += `\\n    ${prop}: ${obj[prop]};`\r\n        }\r\n\r\n        if (selector === this.elem_selector) {\r\n            return `${selector}${scoped_selector} {${style}\\n}`\r\n        }\r\n\r\n        return `${scoped_selector} ${selector} {${style}\\n}`\r\n    }\r\n\r\n    // Генерирует полные стили по входящему объекту\r\n    jsonToStyle(json, scoped = '') {\r\n        let style = '';\r\n        for (let selector in json) {\r\n            style += this.objToStyle(selector, json[selector], scoped) + '\\n\\n';\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n\r\n    init() {\r\n        // Если нужно, сгенерировать id для изоляции стилей\r\n        if (this.scoped) {\r\n            this.scopedId = this.scopedIdGenerate();\r\n            this.elem.dataset.scoped = this.scopedId;\r\n        }\r\n\r\n        // Сгенерировать строку стилей из полученного объекта\r\n        this.style_string = this.jsonToStyle(this.style_obj, this.scopedId);\r\n\r\n        // Вставить сгенерированные стили на страницу\r\n        this.styleInject(this.style_string, document.head, 'CSSinJSON_style', this.scopedId);\r\n    }\r\n}\r\n\r\nwindow.CSSinJSON = CSSinJSON;","/*Функция из jQuery для объединения объектов\r\n * var newObj = extend(obj_1, obj_2);\r\n *\r\n * Для рекурсивного объединения\r\n * var newObj = extend(true, obj_1, obj_2);\r\n *\r\n * Работа функции изменяет первый объект obj_1\r\n * newObj === obj_1\r\n */\r\n\r\n\r\nexport default function extend() {\r\n    var options, name, src, copy, copyIsArray, clone,\r\n        target = arguments[0] || {},\r\n        i = 1,\r\n        length = arguments.length,\r\n        deep = false;\r\n    // Handle a deep copy situation\r\n    if (typeof target === \"boolean\") {\r\n        deep = target;\r\n        // Skip the boolean and the target\r\n        target = arguments[i] || {};\r\n        i++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (typeof target !== \"object\" && !isFunction(target)) {\r\n        target = {};\r\n    }\r\n    // Extend jQuery itself if only one argument is passed\r\n    if (i === length) {\r\n        target = this;\r\n        i--;\r\n    }\r\n    for (; i < length; i++) {\r\n        // Only deal with non-null/undefined values\r\n        if ((options = arguments[i]) != null) {\r\n            // Extend the base object\r\n            for (name in options) {\r\n                src = target[name];\r\n                copy = options[name];\r\n                // Prevent never-ending loop\r\n                if (target === copy) {\r\n                    continue;\r\n                }\r\n                // Recurse if we're merging plain objects or arrays\r\n                if (deep && copy && (isPlainObject(copy) ||\r\n                        (copyIsArray = Array.isArray(copy)))) {\r\n                    if (copyIsArray) {\r\n                        copyIsArray = false;\r\n                        clone = src && Array.isArray(src) ? src : [];\r\n                    } else {\r\n                        clone = src && isPlainObject(src) ? src : {};\r\n                    }\r\n                    // Never move original objects, clone them\r\n                    target[name] = extend(deep, clone, copy);\r\n                    // Don't bring in undefined values\r\n                } else if (copy !== undefined) {\r\n                    target[name] = copy;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        var proto, Ctor;\r\n        // Detect obvious negatives\r\n        // Use toString instead of jQuery.type to catch host objects\r\n        if (!obj || toString.call(obj) !== \"[object Object]\") {\r\n            return false;\r\n        }\r\n        proto = getProto(obj);\r\n        // Objects with no prototype (e.g., `Object.create( null )`) are plain\r\n        if (!proto) {\r\n            return true;\r\n        }\r\n        // Objects with prototype are plain iff they were constructed by a global Object function\r\n        Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\r\n        return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\r\n\r\n        function getProto(obj) {\r\n            obj = obj || {};\r\n            return obj.getPrototypeOf;\r\n        }\r\n\r\n        function class2type() {\r\n            return {};\r\n        }\r\n\r\n        function hasOwn(class2type) {\r\n            return class2type.hasOwnProperty;\r\n        }\r\n\r\n        function fnToString(hasOwn) {\r\n            return hasOwn.toString;\r\n        }\r\n    }\r\n\r\n    // Return the modified object\r\n    return target;\r\n};"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}